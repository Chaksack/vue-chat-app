{"remainingRequest":"/Users/chak/omega/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chak/omega/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chak/omega/src/components/Chat.vue","mtime":1616984287628},{"path":"/Users/chak/omega/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chak/omega/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chak/omega/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/chak/omega/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chak/omega/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZScKCmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkKCkgewogICAgdGhpcy5kYi5jb2xsZWN0aW9uKCdtZXNzYWdlcycpLm9yZGVyQnkoJ2NyZWF0ZWRBdCcpCiAgICAgICAgLm9uU25hcHNob3QocXVlcnlTbmFwID0+IHsKICAgICAgICAgIHRoaXMubWVzc2FnZXMgPSBxdWVyeVNuYXAuZG9jcy5tYXAoZG9jID0+IGRvYy5kYXRhKCkpCiAgICAgICAgfSkKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiBmaXJlYmFzZS5hdXRoKCkuY3VycmVudFVzZXIsCiAgICAgIGRiOiBmaXJlYmFzZS5maXJlc3RvcmUoKSwKICAgICAgbWVzc2FnZTogJycsCiAgICAgIG1lc3NhZ2VzOiBbXSwKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGxvZ291dCgpIHsKICAgICAgZmlyZWJhc2UuYXV0aCgpLnNpZ25PdXQoKQogICAgfSwKICAgIHNlbnRPclJlY2VpdmVkKHVzZXJVSUQpIHsKICAgICAgcmV0dXJuIHVzZXJVSUQgPT09IHRoaXMudXNlci51aWQgPyAnc2VudCcgOiAncmVjZWl2ZWQnCiAgICB9LAogICAgYXN5bmMgc2VuZE1lc3NhZ2UoKSB7CgogICAgICBjb25zdCBtZXNzYWdlSW5mbyA9IHsKICAgICAgICAndXNlclVJRCc6IHRoaXMudXNlci51aWQsCiAgICAgICAgJ2Rpc3BsYXlOYW1lJzogdGhpcy51c2VyLmRpc3BsYXlOYW1lLAogICAgICAgICdwaG90b1VSTCc6IHRoaXMudXNlci5waG90b1VSTCwKICAgICAgICAndGV4dCc6IHRoaXMubWVzc2FnZSwKICAgICAgICAnY3JlYXRlZEF0JzogRGF0ZS5ub3coKSwKICAgICAgfQoKICAgICAgYXdhaXQgdGhpcy5kYi5jb2xsZWN0aW9uKCdtZXNzYWdlcycpLmFkZChtZXNzYWdlSW5mbykKCiAgICAgIHRoaXMubWVzc2FnZSA9ICcnCiAgICAgIHRoaXMuJHJlZnNbJ3Njcm9sbGFibGUnXS5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJyB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <header>\n      <h1>Ms23</h1>\n      <button @click=\"logout\">Logout!</button>\n    </header>\n\n    <section>\n      <main>\n        <div v-for=\"(msg, index) in messages\" v-bind:key=\"'index-'+index\"\n             :class=\"['message', sentOrReceived(msg.userUID)]\">\n          <img :src=\"msg.photoURL\" :alt=\"msg.displayName\">\n          <p>{{ msg.text }}</p>\n        </div>\n\n        <div ref=\"scrollable\"></div>\n      </main>\n\n      <form v-on:submit.prevent=\"sendMessage\">\n        <input v-model=\"message\" type=\"text\" placeholder=\"Enter your message!\">\n        <button :disabled=\"!message\" type=\"submit\"> send </button>\n      </form>\n    </section>\n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase'\n\nexport default {\n  mounted() {\n    this.db.collection('messages').orderBy('createdAt')\n        .onSnapshot(querySnap => {\n          this.messages = querySnap.docs.map(doc => doc.data())\n        })\n  },\n  data() {\n    return {\n      user: firebase.auth().currentUser,\n      db: firebase.firestore(),\n      message: '',\n      messages: [],\n    }\n  },\n  methods: {\n    logout() {\n      firebase.auth().signOut()\n    },\n    sentOrReceived(userUID) {\n      return userUID === this.user.uid ? 'sent' : 'received'\n    },\n    async sendMessage() {\n\n      const messageInfo = {\n        'userUID': this.user.uid,\n        'displayName': this.user.displayName,\n        'photoURL': this.user.photoURL,\n        'text': this.message,\n        'createdAt': Date.now(),\n      }\n\n      await this.db.collection('messages').add(messageInfo)\n\n      this.message = ''\n      this.$refs['scrollable'].scrollIntoView({ behavior: 'smooth' })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  body {\n    margin: 0;\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;\n    background-color: rgb(255, 255, 255);\n  }\n\n  .wrapper {\n    text-align: center;\n    max-width: 728px;\n    margin: 0 auto;\n\n    header {\n      background-color: #292929;\n      height: 10vh;\n      min-height: 50px;\n      color: rgb(255, 255, 255);\n      position: fixed;\n      width: 100%;\n      max-width: 728px;\n      top: 0;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      z-index: 99;\n      padding: 10px;\n      box-sizing: border-box;\n      border-radius: 10px;\n    }\n\n    section {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      min-height: 100vh;\n      background-color: rgb(12, 12, 12);\n\n      main {\n        padding: 10px;\n        height: 75vh;\n        margin: 10vh 0 10vh;\n        overflow-y: scroll;\n        display: flex;\n        flex-direction: column;\n\n        &::-webkit-scrollbar {\n          width: 0.25rem;\n        }\n\n        &::-webkit-scrollbar-track {\n          background: #000000;\n        }\n\n        &::-webkit-scrollbar-thumb {\n          background: #838188;\n        }\n      }\n\n      form {\n        height: 10vh;\n        position: fixed;\n        bottom: 0;\n        background-color: rgb(14, 13, 13);\n        width: 100%;\n        max-width: 728px;\n        display: flex;\n        font-size: 1.5rem;\n\n        button {\n          width: 20%;\n          background-color: rgb(27, 27, 185);\n        }\n\n        input {\n          line-height: 1.5;\n          width: 100%;\n          font-size: 1.5rem;\n          background: rgb(8, 8, 8);\n          color: white;\n          outline: none;\n          border: 5px;\n          border-color: #838188;\n          border-radius: 10px;\n          padding: 0 10px;\n        }\n      }\n    }\n\n    button {\n      background-color: #0b93f6; /* Green */\n      border: 5px;\n      border-radius: 10px;\n      color: white;\n      padding: 15px 32px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      cursor: pointer;\n      font-size: 1.25rem;\n\n      &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n    }\n\n    button, input {\n      color: #fff;\n      border: none;\n    }\n\n    p {\n      max-width: 500px;\n      margin-bottom: 12px;\n      line-height: 24px;\n      padding: 10px 20px;\n      border-radius: 25px;\n      position: relative;\n      color: white;\n      text-align: center;\n    }\n\n    .message {\n      display: flex;\n      align-items: center;\n\n      &.received {\n        p {\n          background: #464646;\n          color: rgb(255, 255, 255);\n        }\n      }\n\n      &.sent {\n        flex-direction: row-reverse;\n\n        p {\n          color: #fff;\n          background: #0b93f6;\n          align-self: flex-end;\n        }\n      }\n\n      img {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n        margin: 2px 5px;\n      }\n\n      p {\n        max-width: 500px;\n        margin-bottom: 12px;\n        line-height: 24px;\n        padding: 10px 20px;\n        border-radius: 25px;\n        position: relative;\n        color: #fff;\n        text-align: center;\n      }\n\n\n    }\n  }\n\n</style>"]}]}